{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2024-03-27T06:29:13.404Z",
    "end": "2024-03-27T06:29:13.435Z",
    "duration": 31,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ad11beab-bdf7-4ea4-9ad0-5ec0471d3d47",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "53ab3add-99e0-469b-8276-b6c535739678",
          "title": "heading shouls be Movie",
          "fullFile": "C:\\Users\\Mohan\\Desktop\\Book-A-Movie-Ticket\\src\\__tests__\\api.test.js",
          "file": "\\__tests__\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add context",
              "fullTitle": "heading shouls be Movie should add context",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"simple string\",\n  \"http://www.url.com/pathname\",\n  \"http://www.url.com/screenshot-maybe.jpg\",\n  {\n    \"title\": \"expected output\",\n    \"value\": {\n      \"a\": 1,\n      \"b\": \"2\",\n      \"c\": \"d\"\n    }\n  }\n]",
              "code": "// context can be a simple string\naddContext(this, 'simple string');\n// context can be a url and the report will create a link\naddContext(this, 'http://www.url.com/pathname');\n// context can be an image url and the report will show it inline\naddContext(this, 'http://www.url.com/screenshot-maybe.jpg');\n// context can be an object with title and value properties\naddContext(this, {\n  title: 'expected output',\n  value: {\n    a: 1,\n    b: '2',\n    c: 'd',\n  },\n});",
              "err": {},
              "uuid": "c69fbc20-7d02-478f-acba-ff783ec7d260",
              "parentUUID": "53ab3add-99e0-469b-8276-b6c535739678",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c69fbc20-7d02-478f-acba-ff783ec7d260"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "6621d915-288e-40c8-9784-5deb3bc12f66",
          "title": "test suite",
          "fullFile": "C:\\Users\\Mohan\\Desktop\\Book-A-Movie-Ticket\\src\\__tests__\\api.test.js",
          "file": "\\__tests__\\api.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"test suite\"",
              "fullTitle": "test suite \"before each\" hook in \"test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addContext(this, 'some context');",
              "err": {},
              "uuid": "9962dbcd-523e-40cf-befe-d41643bbea0a",
              "parentUUID": "6621d915-288e-40c8-9784-5deb3bc12f66",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"test suite\"",
              "fullTitle": "test suite \"after each\" hook in \"test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addContext(this, {\n  title: 'afterEach context',\n  value: { a: 1 },\n});",
              "err": {},
              "uuid": "4466fb46-90a8-40f1-8a42-ee8986142bd2",
              "parentUUID": "6621d915-288e-40c8-9784-5deb3bc12f66",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should display with beforeEach and afterEach context",
              "fullTitle": "test suite should display with beforeEach and afterEach context",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"some context\",\n  {\n    \"title\": \"afterEach context\",\n    \"value\": {\n      \"a\": 1\n    }\n  }\n]",
              "code": "// assert something",
              "err": {},
              "uuid": "73621c20-259e-46d0-b170-796ce3f9072a",
              "parentUUID": "6621d915-288e-40c8-9784-5deb3bc12f66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73621c20-259e-46d0-b170-796ce3f9072a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "b3e63eca-3184-4753-9da0-eac8b6ac5740",
          "title": "Test Users",
          "fullFile": "C:\\Users\\Mohan\\Desktop\\Book-A-Movie-Ticket\\src\\__tests__\\api.test.js",
          "file": "\\__tests__\\api.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a 200 response on GET /booking",
              "fullTitle": "Test Users should return a 200 response on GET /booking",
              "timedOut": false,
              "duration": 4,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const  response = await supertest\nconsole.log(response)\n     .get(\"/api/booking\")\n     .then(response => {\n         return response;\n });\n expect(response.statusCode).to.be.equal(200);",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'get')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'get')\n    at Context.<anonymous> (__tests__\\api.test.js:54:11)",
                "diff": null
              },
              "uuid": "aa9870ba-1ec2-4fb9-b640-306cf77d9389",
              "parentUUID": "b3e63eca-3184-4753-9da0-eac8b6ac5740",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aa9870ba-1ec2-4fb9-b640-306cf77d9389"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}